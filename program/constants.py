from dydx3.constants import API_HOST_GOERLI, API_HOST_MAINNET
from decouple import config

# !!!! SELECT MODE !!!!!
MODE = "DEVELOPMENT"
### MODE = "PRODUCTION"

# Close all open positions and orders
ABORT_ALL_POSITIONS = True

# Find Cointegrated Pairs
FIND_COINTEGRATED = True

# Manage Exits
MANAGE_EXITS = True

# Place Trades
PLACE_TRADES = True

# None object not found fix
TOKEN_FACTOR_10 = ["XLM-USD", "DOGE-USD", "TRX-USD", "EOS-USD", "UMA-USD"]

# Resolution
RESOLUTION = "1HOUR"

# Stats Window
WINDOW = 21

# Thresholds - Opening
MAX_HALF_LIFE = 24
ZSCORE_THRESH = 1.5
USD_PER_TRADE = 100
USD_MIN_COLLATERAL = 1000

# Thresholds - Closing
CLOSE_AT_ZSCORE_CROSS = True

# Ethereum Address
ETHEREUM_ADDRESS = "0x953bd7Fd60585C2453a4377Bd34163fD868fEda5"

# KEYS - DEVELOPMENT
# Must be on the Testnet in DYDX
STARK_PRIVATE_KEY_TESTNET = config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET = config("DYDX_API_KEY_TESTNET")
DYDX_API_SECRET_TESTNET = config("DYDX_API_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET = config("DYDX_API_PASSPHRASE_TESTNET")

# KEYS - Export
STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_TESTNET # if MODE == "DEVELOPMENT" else STARK_PRIVATE_KEY_MAINNET
DYDX_API_KEY = DYDX_API_KEY_TESTNET # if MODE == "DEVELOPMENT" else DYDX_API_KEY_MAINNET
DYDX_API_SECRET = DYDX_API_SECRET_TESTNET # if MODE == "DEVELOPMENT" else DYDX_API_SECRET_MAINNET
DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_TESTNET # if MODE =="DEVELOPMENT" else DYDX_API_PASSPHRASE_MAINNET

# HOST - Export
HOST = API_HOST_GOERLI # if MODE == "DEVELOPMENT" else API_HOST_MAINNET

# HTTP Provider
HTTP_PROVIDER_TESTNET = "https://eth-goerli.g.alchemy.com/v2/v1cKBuqeJxWcXku6XITXLciCXYuPOyuS"
HTTP_PROVIDER = HTTP_PROVIDER_TESTNET # if MODE == "DEVELOPMENT" else HTTP_PROVIDER_MAINNET
